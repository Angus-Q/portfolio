---
import '../styles/global.css';
import '../styles/fonts.css';
import Footer from '../components/Footer.astro';

interface Props { title?: string; description?: string; heroMode?: boolean; isHomepage?: boolean }
const { title = 'Portfolio', description = 'Personal site', heroMode = false, isHomepage = false } = Astro.props as Props;
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={description} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="preconnect" href="https://cal-sans.com">
    <link rel="preload" href="https://cal-sans.com/fonts/CalSans-SemiBold.woff2" as="font" type="font/woff2" crossorigin>
    <title>{title}</title>
  </head>
  <body class={`min-h-screen flex flex-col ${isHomepage ? 'bg-black text-white' : 'bg-white text-gray-900'}`} data-page-theme={isHomepage ? 'dark' : 'light'}>
    <!-- Page transition overlay -->
    <div class={`page-transition ${isHomepage ? 'dark' : ''}`} id="pageTransition"></div>
    
    {!isHomepage && (
    <header class={`container-px max-w-5xl mx-auto w-full py-6 relative ${heroMode ? 'absolute top-0 left-0 right-0 z-10' : ''}`} id="navbar">
      <nav class="flex flex-col md:flex-row md:items-center md:justify-between">
        <a href="/" class={`font-display text-lg lowercase transition-colors duration-300 font-normal no-underline mb-4 md:mb-0 text-center md:text-left ${isHomepage ? 'text-white' : 'text-gray-900'}`}>angus quigley</a>
        
        <!-- Navigation Links -->
        <ul class="flex flex-row justify-center md:justify-end gap-4 md:gap-6 text-sm font-display text-center md:text-left">
          <li><a href="/portfolio" class={`clean-underline transition-colors duration-300 ${isHomepage ? 'text-white' : 'text-gray-500 hover:text-gray-700'}`}>portfolio</a></li>
          <li><a href="/about" class={`clean-underline transition-colors duration-300 ${isHomepage ? 'text-white' : 'text-gray-500 hover:text-gray-700'}`}>about</a></li>
          <li><a href="/contact" class={`clean-underline transition-colors duration-300 ${isHomepage ? 'text-white' : 'text-gray-500 hover:text-gray-700'}`}>contact</a></li>
        </ul>
      </nav>
    </header>
    )}

    <main class={`flex-1 w-full ${heroMode ? '' : 'container-px max-w-5xl mx-auto pt-8'}`}>
      <slot />
    </main>

    {!isHomepage && <Footer />}

    <script>
      // Page transition system
      function initPageTransitions() {
        const links = document.querySelectorAll('a[href^="/"]');
        const transition = document.getElementById('pageTransition');
        const currentTheme = document.body.getAttribute('data-page-theme');
        
        if (!transition) return;
        
        links.forEach(link => {
          link.addEventListener('click', (e) => {
            e.preventDefault();
            const href = link.getAttribute('href');
            
            if (!href) return;
            
            // Determine target theme
            const isGoingToHome = href === '/';
            const targetTheme = isGoingToHome ? 'dark' : 'light';
            
            // Only show transition if changing themes
            if (currentTheme !== targetTheme) {
              // Mark navigation direction for animations
              if (isGoingToHome) {
                sessionStorage.setItem('toIndex', 'true');
              } else {
                sessionStorage.setItem('fromIndex', 'true');
              }
              
              // Set transition overlay to target theme color
              if (targetTheme === 'dark') {
                transition.classList.add('dark');
              } else {
                transition.classList.remove('dark');
              }
              
              transition.classList.add('active');
              
              setTimeout(() => {
                window.location.href = href;
              }, 200);
            } else {
              // Same theme - navigate immediately without transition
              window.location.href = href;
            }
          });
        });
      }
      
      // Initialize on page load
      document.addEventListener('DOMContentLoaded', initPageTransitions);
      
      // Handle navbar fade-in animation
      function handleNavbarFadeIn() {
        const navbar = document.getElementById('navbar');
        
        if (navbar && sessionStorage.getItem('fromIndex') === 'true') {
          // Clear the flag immediately
          sessionStorage.removeItem('fromIndex');
          
          // Force navbar to start hidden
          navbar.style.opacity = '0';
          navbar.style.transform = 'translateY(-10px)';
          navbar.style.transition = 'none';
          
          // Use requestAnimationFrame to ensure DOM is ready
          requestAnimationFrame(() => {
            requestAnimationFrame(() => {
              navbar.style.transition = '';
              navbar.classList.add('navbar-fade-in');
            });
          });
        }
      }
      
      // Try on both DOMContentLoaded and load events for reliability
      document.addEventListener('DOMContentLoaded', handleNavbarFadeIn);
      
      // Fade out transition overlay on page load
      window.addEventListener('load', () => {
        const transition = document.getElementById('pageTransition');
        
        if (transition) {
          setTimeout(() => {
            transition.classList.remove('active');
          }, 50);
        }
        
        // Fallback: try navbar animation again on load if it didn't work on DOMContentLoaded
        handleNavbarFadeIn();
      });
    </script>
  </body>
</html>
