---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import PageHeader from '../../components/PageHeader.astro';

// Get all newsletter entries and organize by year/month
const newsletterCollection = await getCollection('newsletter');
const allNewsletters = newsletterCollection || [];

// Create a simple object to organize newsletters by year and month
const newslettersByDate: Record<string, Record<string, any[]>> = {};

allNewsletters.forEach(newsletter => {
  const date = newsletter.data.publishDate;
  const year = date.getFullYear().toString();
  const month = date.toLocaleString('default', { month: 'long' }).toLowerCase();
  
  if (!newslettersByDate[year]) {
    newslettersByDate[year] = {};
  }
  
  if (!newslettersByDate[year][month]) {
    newslettersByDate[year][month] = [];
  }
  
  newslettersByDate[year][month].push(newsletter);
});

// Sort years descending
const sortedYears = Object.keys(newslettersByDate).sort((a, b) => parseInt(b) - parseInt(a));

const monthOrder = ['january', 'february', 'march', 'april', 'may', 'june', 
                   'july', 'august', 'september', 'october', 'november', 'december'];
---

<BaseLayout title="Newsletter - Angus Quigley">
  <PageHeader title="Newsletter" subtitle="Thoughts on technology, engineering, and the projects I'm building - organized by month and year." />
  
  <div class="bg-white py-12 md:py-20">
    <div class="container mx-auto px-4 max-w-6xl">
      {sortedYears.map(year => {
        const yearData = newslettersByDate[year];
        const availableMonths = Object.keys(yearData);
        const sortedMonths = availableMonths.sort((a, b) => 
          monthOrder.indexOf(b) - monthOrder.indexOf(a)
        );
        
        return (
          <div class="mb-16">
            <h2 class="font-serif text-4xl font-bold text-main mb-8 text-center">
              {year}
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {sortedMonths.map(month => {
                const monthNewsletters = yearData[month];
                const newsletterCount = monthNewsletters.length;
                
                return (
                  <a href={`/newsletter/${year}/${month}`} 
                     class="group block bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
                    <div class="p-8 text-center">
                      <div class="bg-gray-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4 group-hover:bg-gray-200 transition-colors">
                        <i class="fas fa-calendar-alt text-2xl text-main"></i>
                      </div>
                      
                      <h3 class="font-serif text-2xl font-bold text-main mb-2 capitalize">
                        {month}
                      </h3>
                      
                      <p class="text-gray-600 mb-4">
                        {newsletterCount} {newsletterCount === 1 ? 'issue' : 'issues'}
                      </p>
                      
                      <div class="text-main font-medium group-hover:text-accent transition-colors">
                        View Issues â†’
                      </div>
                    </div>
                  </a>
                );
              })}
            </div>
          </div>
        );
      })}
    </div>
  </div>
</BaseLayout>